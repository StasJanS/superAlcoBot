# Подключаем модуль случайных чисел
import random
# Подключаем модуль для Телеграма
import telebot

# Указываем токен
bot = telebot.TeleBot('#Указываем хэш-токен')
# Импортируем типы из модуля, чтобы создавать кнопки
from telebot import types

# Заготовки для трёх предложений
love = [
    'Несчастен, кто, любя, взаимности лишен. Несчастен тот, чью грудь опустошенность гложет. Но всех несчастней тот, кто полюбить не может! За любовь и счастливых!',
    'Выпьем за величайшее и единственное и своем роде явление, которое укорачивает жизнь каждому человеку в отдельности и продлевает ее всему человечеству в целом... Мне кажется, что все уже догадались! За любовь!',
    'Когда человек рождается, первое чувство, которое он испытывает - любовь его матери. Когда он умирает, последнее чувство, которое он уносит с собой - любовь к оставляемому миру. Не было бы любви, не было бы нас. Так выпьем за любовь!',
    'Любовь - как прилипчивая болезнь: чем больше ее боишься, тем скорее подхватишь. Так выпьем за то, чтобы нас всю жизнь преследовали эпидемии и только любовные! За любовь!',
    'Любовь одна, но подделок под нее - тысячи. Так выпьем за настоящую любовь!']
hb = ['За тебя, моя звездочка, мой нежный, ласковый и временами колючий цветок!',
      'Так выпьем же за именинника, благодаря которому, собрались такие замечательные люди, как мы!!!',
      'Пусть тебе всегда светят звезды - звезда удачи, звезда любви, звезды дружбы и звезды коньяка.',
      'Когда падает звезда, говорят, что это к счастью. Я хочу выпить за то, чтобы в твоей жизни был звездопад.',
      'Есть старый новогодний обычай: как встретишь - так и проведешь. Для именинника с сегодняшнего дня начинается новый год его жизни. Так пусть же он пройдет так же весело, как и сегодняшний вечер!']
smile = ['Выпьем за честных и скромных людей! Тем более, что нас осталось так мало...',
         'Женщины делятся на три категории - на "дам", на "не дам", и "дам, но не вам". Так выпьем же за дам!',
         'Выпьем за тех мужчин, которые могут постоять за себя и полежать за других!',
         'Жил на свете дракон. Питался он только девственницами Так выпьем же за то, чтобы он прилетел к нам и умер от голода!',
         'Девушка нужна мужчине, как кораблю - якорь. Мой тост - за крейсер "Аврора", у которого четыре якоря!',
         'Один мужчина хвастался своим знакомым: \n- Я уже несколько женщин спас от изнасилования! \n- Как? Каким образом? - спрашивают его. \n- Я их уговорил! \n Так выпьем за союз силы и слова!']
shorts = ['Друзья мои, нельзя пить индивидуально, давайте будем напиваться коллективно. За великую силу коллектива!',
          'Давайте выпьем за то, чтобы у нас осталось столько горя, сколько капель останется в наших бокалах.',
          'Дорогой друг, желаю, чтобы у тебя всегда было легкое сердце и тяжелые карманы!',
          'Пусть в вашей жизни будут люди, за которых хочется выпить, а не те, из-за которых хочется напиться!',
          'Пьянству – бой! Так выпьем перед боем!’,  ‘Выпьем за тех, кто, отсутствуя, незримо присутствует здесь!',
          'Выпьем за нашу удачу, хоть иногда пусть бьется в наших силках птица счастья!',
          'Счастья! Добра и зеленого бабла!',
          'Дорогие друзья, давайте выпьем за страсть! Страсть как хочется выпить!',
          'Лучше поздно, чем не до дна!',
          'Ручки, ножки стали зябнуть – не пора ли нам дерябнуть?!',
          'Чтобы ваши желания офигевали от ваших возможностей!',
          'Давайте выпьем за дружбу, ведь именно она умножает радости и разделяет печаль!',
          'Поскольку поводов пить больше нет, то давайте выпьем за «проводку»! Итак, пьем и думаем про водку!',
          'Будь здоров сто веков!',
          'Чтобы елось и пилось, чтоб хотелось и моглось, чтобы всюду и везде было с кем и было где!']
smart = [
    'Если ваша голова забита умными мыслями, а сказать тост вы не можете, не расстраивайтесь: возможно, вы просто глупец. За мудрецов, чьи головы забиты прекрасной чепухой!',
    'Шел по степи одинокий путник. Вдруг видит: сидит компания веселых людей и приглашает его к ним присоединиться. Подошел, остался. Но ему не понравились эти люди. И пошел путник дальше. Шел, шел и вновь видит: у костра, с гитарами расположилась другая компания. Его также пригласили посидеть. Приняв предложение, он вновь понял, что они не походят для его мятежной души. Пошел дальше. И... в степи его разорвали шакалы. Так давайте выпьем за то, что если кому-то не нравится наша компания - пусть его разорвут шакалы!',
    'Чем больше мы ищем смысл жизни, тем меньше его в нашей жизни. И наоборот. Отвергая смысл жизни, мы наполняем свою жизнь большим смыслом. Так не будем же искать приключений на свою голову!',
    'Чем мудрый человек отличается от умного? Мудрый человек никогда не попадет в такую ситуацию, из которой умный с честью выйдет. Так давайте поднимем бокалы за то, чтобы у нас хватило терпения быть умными, ума - стать мудрыми и мудрости - оставаться при этом самими собой!',
    'Прошел слух, будто в одном ущелье один охотник застрелил огромного тигра, и вот все охотники побежали в это счастливое ущелье. А тем временем первый охотник в другом месте убил большого медведя. Ватага охотников бросилась туда, а охотник-мастер в третьем ущелье выследил матерого барса... Кто же, спрашивается, настоящий охотник? Тот, кто ищет добычу сам, или те, кто бегает за ним следом? Так выпьем же за то, чтобы всегда идти своим путем и быть настоящим охотником']


# Метод, который получает сообщения и обрабатывает их
@bot.message_handler(content_types=['text'])
def get_text_messages(message):
    # Если написали «Привет»
    if message.text.lower() == "наливай":
        # Пишем приветствие
        bot.send_message(message.from_user.id, "Сейчас я тебе помогу поразить всех!!!")
        # Готовим кнопки
        keyboard = types.InlineKeyboardMarkup()
        # По очереди готовим текст и обработчик для каждого знака зодиака
        key_1 = types.InlineKeyboardButton(text='О любви', callback_data='1')
        # И добавляем кнопку на экран
        keyboard.add(key_1)
        key_2 = types.InlineKeyboardButton(text='С Днём рождения!', callback_data='2')
        keyboard.add(key_2)
        key_3 = types.InlineKeyboardButton(text='Шуточные', callback_data='3')
        keyboard.add(key_3)
        key_4 = types.InlineKeyboardButton(text='Короткие', callback_data='4')
        keyboard.add(key_4)
        key_5 = types.InlineKeyboardButton(text='Мудрые', callback_data='5')
        keyboard.add(key_5)

        # Показываем все кнопки сразу и пишем сообщение о выборе
        bot.send_message(message.from_user.id, text='Выбери тему тоста!', reply_markup=keyboard)
    elif message.text.lower() == "да":
        bot.send_message(message.from_user.id, "Напиши слово: Наливай")
    elif message.text.lower() == "нет":
        bot.send_message(message.from_user.id, "Отлично!!! Я рад, что ты справишься сам!!!")

    else:
        bot.send_message(message.from_user.id,
                         "Привет, дружище!!!! Рад тебя видеть в хорошем здравии и в отличной компании!!! Тебе нужна моя помощь? да/нет")


# Обработчик нажатий на кнопки
@bot.callback_query_handler(func=lambda call: True)
def callback_worker(call):
    # Если нажали на одну из кнопок — выводим тост
    if call.data == "1":
        msg = random.choice(love)
        bot.send_message(call.message.chat.id, msg)

    elif call.data == "2":
        # Выбирает тост
        msg = random.choice(hb)
        # Отправляем текст в Телеграм
        bot.send_message(call.message.chat.id, msg)

    elif call.data == "3":
        msg = random.choice(smile)
        bot.send_message(call.message.chat.id, msg)

    elif call.data == "4":
        msg = random.choice(shorts)
        bot.send_message(call.message.chat.id, msg)

    elif call.data == "5":
        msg = random.choice(smart)
        bot.send_message(call.message.chat.id, msg)




# Запускаем постоянный опрос бота в Телеграме
bot.polling(none_stop=True, interval=0)
